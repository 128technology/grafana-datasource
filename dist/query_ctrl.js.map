{"version":3,"sources":["../src/query_ctrl.js"],"names":["_","QueryCtrl","analytics","GenericDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","$q","console","log","q","scope","target","metric","resolve","map","newSegment","value","x","panelCtrl","refresh","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAOA,O;;AACCC,e,kBAAAA,S;;;;;;;;;;;;;;;;;;;;;AAGFC,e,GAAY,CAChB,WADgB,EAEhB,aAFgB,EAGhB,mBAHgB,EAIhB,cAJgB,EAKhB,SALgB,EAMhB,eANgB,EAOhB,iBAPgB,EAQhB,eARgB,EAShB,kBATgB,EAUhB,sBAVgB,EAWhB,wBAXgB,EAYhB,sBAZgB,EAahB,YAbgB,EAchB,SAdgB,EAehB,SAfgB,EAgBhB,aAhBgB,EAiBhB,gBAjBgB,EAkBhB,aAlBgB,EAmBhB,aAnBgB,EAoBhB,iBApBgB,EAqBhB,gBArBgB,EAsBhB,aAtBgB,EAuBhB,aAvBgB,EAwBhB,iBAxBgB,EAyBhB,eAzBgB,EA0BhB,YA1BgB,EA2BhB,YA3BgB,EA4BhB,qBA5BgB,EA6BhB,oBA7BgB,EA8BhB,oBA9BgB,EA+BhB,mBA/BgB,EAgChB,gBAhCgB,EAiChB,gBAjCgB,EAkChB,yBAlCgB,EAmChB,wBAnCgB,EAoChB,wBApCgB,EAqChB,mBArCgB,EAsChB,gBAtCgB,EAuChB,gBAvCgB,EAwChB,yBAxCgB,EAyChB,wBAzCgB,EA0ChB,wBA1CgB,EA2ChB,wBA3CgB,EA4ChB,wBA5CgB,C;;4CA+CLC,0B;;;AAEX,4CAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,YAA/B,EAA6CC,EAA7C,EAAkD;AAAA;;AAAA,8JAC1CH,MAD0C,EAClCC,SADkC;;AAGhDG,kBAAQC,GAAR;;AAEA,gBAAKC,CAAL,GAASH,EAAT;AACA,gBAAKI,KAAL,GAAaP,MAAb;AACA,gBAAKE,YAAL,GAAoBA,YAApB;AACA,gBAAKM,MAAL,CAAYC,MAAZ,GAAqB,MAAKD,MAAL,CAAYC,MAAZ,IAAsB,eAA3C;AARgD;AASjD;;;;8CAEmB;AAAA;;AAClB,mBAAO,KAAKH,CAAL,CAAOI,OAAP,CAAeZ,UAAUa,GAAV,CAAc,aAAK;AACvC,qBAAO,OAAKT,YAAL,CAAkBU,UAAlB,CAA6B;AAClCC,uBAAOC;AAD2B,eAA7B,CAAP;AAGD,aAJqB,CAAf,CAAP;AAKD;;;6CAEkB;AACjB,iBAAKC,SAAL,CAAeC,OAAf;AACD;;;;QAvB6CnB,S;;;;AA0BhDE,iCAA2BkB,WAA3B,GAAyC,4BAAzC","file":"query_ctrl.js","sourcesContent":["import _ from 'lodash';\nimport {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nconst analytics = [\n  'bandwidth',\n  'utilization',\n  'gross_entitlement',\n  'packets_lost',\n  'payload',\n  'payload_ratio',\n  'retransmissions',\n  'session_count',\n  'session_arrivals',\n  'session_arrival_rate',\n  'session_departure_rate',\n  'time_to_first_packet',\n  'total_data',\n  'tx_data',\n  'rx_data',\n  'tx_rx_ratio',\n  'total_tcp_data',\n  'tx_tcp_data',\n  'rx_tcp_data',\n  'tcp_tx_rx_ratio',\n  'total_udp_data',\n  'tx_udp_data',\n  'rx_udp_data',\n  'udp_tx_rx_ratio',\n  'total_packets',\n  'tx_packets',\n  'rx_packets',\n  'tx_rx_packets_ratio',\n  'tx_packets_dropped',\n  'rx_packets_dropped',\n  'total_tcp_packets',\n  'tx_tcp_packets',\n  'rx_tcp_packets',\n  'tx_rx_tcp_packets_ratio',\n  'tx_tcp_packets_dropped',\n  'rx_tcp_packets_dropped',\n  'total_udp_packets',\n  'tx_udp_packets',\n  'rx_udp_packets',\n  'tx_rx_udp_packets_ratio',\n  'tx_udp_packets_dropped',\n  'rx_udp_packets_dropped',\n  'tx_tcp_retransmissions',\n  'rx_tcp_retransmissions'\n];\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv, $q)  {\n    super($scope, $injector);\n\n    console.log(this);\n\n    this.q = $q;\n    this.scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.target.metric = this.target.metric || 'select metric'\n  }\n\n  getMetricSegments() {\n    return this.q.resolve(analytics.map(x => {\n      return this.uiSegmentSrv.newSegment({\n        value: x\n      });\n    }));\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh();\n  }\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}